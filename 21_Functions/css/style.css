@import url("https://fonts.googleapis.com/css2?family=Nunito&display=swap");

/* Some of the commonly used CSS functions are Math functions */

/* || RESET */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* || VARIABLES */
:root {
  /* FONT */
  --FF: "Nunito", sans-serif;
  /* selects smallest of the two values */
  /* --FS: 1.5rem; */
  /* one absolute value and one relative value that change based on the height of the page - better to choose vh units for fonts then vw units*/
  --FS: min(2.25rem, 3vh);
  /* max function chooses larger of the two values that we provide - should have one absolute value and one relative value */
  /* clamp function - which can take min, ideal and max values - font size stops shrinking at 1.75rem and stops expanding at the max 2.25rem */
  --FS-1: clamp(1.75rem, 3vh, 2.25rem);
  --FS-SM: clamp(1.25rem, 2vh, 1.5rem);

  --FS-XL: 3rem;

  /* COLOR */
  --BGCOLOR: #475569;
  --ALT-BGCOLOR: #1E293B;
  --RADIAL-COLOR: whitesmoke;
  --LIGHT-COLOR: whitesmoke;
  --DARK-COLOR: #000;

  /* SQUARE */
  --SQUARE-BGCOLOR: papayawhip;
  --SQUARE-SIZE: max(150px, 20vw);

  /* GENERAL */
  --PADDING: 0.5em;
  /* var is a reference function */
  --SHADOWS: 0 6px 5px -5px var(--DARK-COLOR);
  --BORDERS: 2px solid var(--DARK-COLOR);
}

@media (prefers-color-scheme: light) {
  :root {
    --BGCOLOR: #000;
    --ALT-BGCOLOR: #333;
    /* rgb, hsl are color functions */
    --RADIAL-COLOR: rgb(217, 217, 217);
    --SQUARE-BGCOLOR: rgb(202, 174, 202);
  }
}

/* || GENERAL STYLES */
body {
  font: var(--FS) var(--FF);
  min-height: 100vh;

  background-color: var(--BGCOLOR);
  /* Image functions(gradient) - also url to load background image*/
  background-image: radial-gradient(var(--RADIAL-COLOR), var(--BGCOLOR));
  display: flex;
  flex-direction: column;
}

header,
nav,
footer {
  display: grid;
  place-content: center;
  grid-template-columns: 100%;
  text-align: center;
}

header,
footer {
  position: sticky;
  background-color: var(--ALT-BGCOLOR);
  color: var(--LIGHT-COLOR);
}

header {
  top: 0;
}

nav {
  background-color: var(--LIGHT-COLOR);
  color: var(--DARK-COLOR);
  /* padding: var(--PADDING); */
  border-bottom: var(--BORDERS);
  box-shadow: var(--SHADOWS);
}

main {
  flex-grow: 1;
  padding: var(--PADDING);
  display: grid;
  /* grid functions - Math function specific to grid is minmax(smallest grid size and largest grid size) - at 100px the squares stop shrinking */
  grid-template-columns: repeat(4, minmax(100px, 300px));
  /* if it reaches the maximum width(and stops growing) then the column gap will increase to adjust the page to the screen size */
  gap: min(2vw, 20px);

  /* display: flex;
  flex-flow:column nowrap;
  justify-content: flex-start; */
  /* padding: var(--PADDING); */

}

main section{
  flex-grow:1;
  padding: var(--PADDING);
}

main aside{
  background-color: hsla(0, 0%, 20%, 0.8);
  color:var(--LIGHT-COLOR);
  font-size: var(--FS-SM);
  font-style: italic;
  padding: var(--PADDING);
}

.content{
  margin-top:16px;
}

.tooltip {
  border-bottom: 1px dashed orange;
  position: relative;
}

/* we can stack pseudo element over a pseudo class */
.tooltip:hover::before{
  content: attr(data-tooltip);
  position: absolute;
  top: -40px;
  white-space: nowrap;
  background-color: var(--DARK-COLOR);
  padding: var(--PADDING);
  border-radius: 15px;
}

footer {
  bottom: 0;
}

a:any-link{
  color:firebrick
}

a:hover,a:focus{
  /* filter has several functions */
  /* instead of adding transparency the link gets brighter */
  filter: brightness(150%);
  /* we can also use hue-rotate to change to a different color - so selects a color in the color wheel which is at a distance of 180 deg from the current color */
  /* filter: hue-rotate(180deg); */
}

/* || FEATURES */

.square--highlight {
  --SQUARE-BGCOLOR: cornflowerblue;
}

.square {
  background-color: var(--SQUARE-BGCOLOR);
  /* width: var(--SQUARE-SIZE);
  height: var(--SQUARE-SIZE); */
  border: var(--BORDERS);
  border-radius: 15px;
  display: grid;
  place-content: center;
  font-size: var(--FS-XL);
  box-shadow: var(--SHADOWS);
}

@media screen and (min-width: 576px){
  main{
    flex-flow: row nowrap;
    justify-content: space-between;
  }

  main section{
    width: calc(70% - 5px);
  }

  main aside{
    width: calc(30% - 5px);
  }
}